from .models import UserPublications
from django.contrib.auth.models import User
from django import forms
from django.core.exceptions import ValidationError

class CreatePublicationsForm(forms.ModelForm):
    class Meta:
        model = UserPublications
        fields = ['title', 'theme', 'tags', 'text', 'url', 'images']
        widgets = {
            'title': forms.TextInput(attrs = {
                'placeholder': '–ü—Ä–∏—Ä–æ–¥–∞, –∫–Ω–∏–≥–∞ —ñ —Å–ø–æ–∫—ñ–π üåø',
                'class':'publication-form-input',
                'id': 'form-title'
            }),
            'theme': forms.TextInput(attrs = {
                'placeholder': '–ù–∞–ø–∏—à—ñ—Ç—å —Ç–µ–º—É –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó', 
                'class':'publication-form-input',
                'id': 'form-theme'
            }),
            'tags': forms.TextInput(attrs = {
                'placeholder': '#–≤—ñ–¥–ø–æ—á–∏–Ω–æ–∫ #–Ω–∞—Ç—Ö–Ω–µ–Ω–Ω—è #–∂–∏—Ç—Ç—è #–ø—Ä–∏—Ä–æ–¥–∞ #—á–∏—Ç–∞–Ω–Ω—è #—Å–ø–æ–∫—ñ–π #–≥–∞—Ä–º–æ–Ω—ñ—è', 
                'class':'publication-form-input',
                'id': 'form-tags'
            }),
            'text': forms.Textarea(attrs = {
                'placeholder': '–Ü–Ω–∫–æ–ª–∏ –Ω–∞–π–∫—Ä–∞—â—ñ —ñ–¥–µ—ó –Ω–∞—Ä–æ–¥–∂—É—é—Ç—å—Å—è –≤ —Ç–∏—à—ñ. –ü—Ä–∏—Ä–æ–¥–∞, –∫–Ω–∏–≥–∞ —ñ —Å–ø–æ–∫—ñ–π ‚Äî —É—Å–µ, —â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ, –∞–±–∏ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏—Å—å.', 
                'id': 'form-text',
            }),
            'url': forms.URLInput(attrs = {
                'placeholder': 'https://www.instagram.com/world.it.academy/?locale=ua', 
                'class':'publication-form-input',
                'id': 'form-url'
            }),
            'images': forms.ClearableFileInput(attrs = {
                'id': 'image-field'
            }),
        }
        labels = {
            'title': '–ù–∞–∑–≤–∞ –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó',
            'theme': '–¢–µ–º–∞ –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó',
            'tags': '–¢–µ–≥–∏ –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó',
            'text': '',
            'url': '–ü–æ—Å–∏–ª–∞–Ω–Ω—è',
            'images': ''
        }
    def clean(self):
        cleaned_data = super().clean()

        url = cleaned_data.get('url')

        if url and not url.startswith('https://'):
            self.add_error('url', '–ü–æ—Å–∏–ª–∞–Ω–Ω—è –º–∞—î –ø–æ—á–∏–Ω–∞—Ç–∏—Å—å –∑ "https://"')

        return cleaned_data

class UserProfileUpdateForm(forms.ModelForm):
    first_name = forms.CharField(
        max_length=30,
        required=True,
        label='–Ü–º‚Äô—è',
        widget=forms.TextInput(attrs = {'placeholder': '–í–≤–µ–¥—ñ—Ç—å –í–∞—à–µ —ñ–º‚Äô—è'})
    )
    last_name = forms.CharField(
        max_length=30,
        required=True,
        label='–ü—Ä—ñ–∑–≤–∏—â–µ',
        widget=forms.TextInput(attrs = {'placeholder': '–í–≤–µ–¥—ñ—Ç—å –í–∞—à–µ –ø—Ä—ñ–∑–≤–∏—â–µ'})
    )
    username = forms.CharField(
        max_length=150,
        required=True,
        label='–Ü–º‚Äô—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞',
        widget=forms.TextInput(attrs = {'placeholder': '@'})
    )

    class Meta:
        model = User
        fields = ['first_name', 'last_name', 'username']

    def clean_username(self):
        username = self.cleaned_data.get('username')
        if User.objects.filter(username=username).exclude(pk=self.instance.pk).exists():
            raise ValidationError('–¶–µ —ñ–º‚Äô—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤–∂–µ –∑–∞–π–Ω—è—Ç–µ.')
        return username